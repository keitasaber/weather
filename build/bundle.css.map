{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\Home.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { onMount } from \"svelte\";\r\n  import { loop, loop_guard } from \"svelte/internal\";\r\n  import About from \"./About.svelte\";\r\n  import { beforeUpdate, afterUpdate } from \"svelte\";\r\n\r\n  let loading = false;\r\n  let dateTime = \"\"; // currrent Datetime\r\n  let objWeather = [];\r\n  let iconWinds = [\r\n    0,\r\n    23,\r\n    45,\r\n    68,\r\n    90,\r\n    113,\r\n    135,\r\n    158,\r\n    180,\r\n    203,\r\n    225,\r\n    248,\r\n    270,\r\n    293,\r\n    313,\r\n    336,\r\n    1000,\r\n  ];\r\n\r\n  let apiBaseUrl =\r\n    \"https://api.openweathermap.org/data/2.5/onecall?lat=21.1167&lon=105.8833&exclude=current,hourly&lang=vi&units=metric&appid=6fa95522a6952d5710016d1dbaf3af36\";\r\n  onMount(async () => {\r\n    loading = true;\r\n    await fetch(apiBaseUrl).then(async (res) => {\r\n      loading = false;\r\n      let resData = await res.json();\r\n      objWeather = resData.daily;\r\n    });\r\n  });\r\n\r\n  function getWindyIcon(windyDeg) {\r\n    for (let i = 0; i < iconWinds.length; i++) {\r\n      if (windyDeg == iconWinds) {\r\n        return \"wi wi-wind towards-\" + windyDeg + \"-deg\";\r\n      } else {\r\n        return \"wi wi-wind towards-\" + iconWinds[i - 1] + \"-deg\";\r\n      }\r\n    }\r\n  }\r\n\r\n  function getWeatherIcon(weatherIcon) {\r\n    return \"http://openweathermap.org/img/wn/\" + weatherIcon + \"@2x.png\";\r\n  }\r\n\r\n  function getLocalTimeFromTimestamp(timestamp, timezone) {\r\n    let time = new Date(timestamp * 1000).toLocaleTimeString(\"vn-VM\", {\r\n      timeZone: timezone,\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      hour12: true,\r\n    });\r\n    return time;\r\n  }\r\n\r\n  // get datetime\r\n  function getCurrentDateTime() {\r\n    let today = new Date();\r\n\r\n    let date =\r\n      today.getDate() +\r\n      \"/\" +\r\n      (today.getMonth() + 1) +\r\n      \"/\" +\r\n      today.getFullYear();\r\n\r\n    let time =\r\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n\r\n    dateTime = time + \", \" + date;\r\n  }\r\n\r\n  setInterval(getCurrentDateTime, 1000);\r\n\r\n  async function RefreshCurrentWeather() {\r\n    loading = true;\r\n    await fetch(apiBaseUrl).then(async (res) => {\r\n        loading = false;\r\n      let resData = await res.json();\r\n      objWeather = resData.daily;\r\n    });\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .temp-weather span {\r\n    font-size: 30px;\r\n  }\r\n  .temp-weather img {\r\n    vertical-align: middle;\r\n  }\r\n  .current-weather-card {\r\n    position: relative;\r\n  }\r\n\r\n  .current-weather-card .mask {\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: white;\r\n    z-index: 10;\r\n    position: absolute;\r\n    opacity: 0.2;\r\n  }\r\n  .mask-hide {\r\n    visibility: hidden;\r\n  }\r\n\r\n  .mask-show {\r\n    visibility: visible;\r\n  }\r\n\r\n  .rotation {\r\n    animation: rotation-keyframes 1.5s ease infinite;\r\n  }\r\n\r\n  @keyframes rotation-keyframes {\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n</style>\r\n\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col s12 l7 m12\">\r\n      .\r\n      <div class=\"card blue-grey darken-1 current-weather-card\">\r\n        <div\r\n          class:mask-show={loading}\r\n          class:mask-hide={!loading}\r\n          class=\"mask\" />\r\n        <div class=\"card-content white-text\">\r\n          <span class=\"card-title\">\r\n            <i class=\"fas fa-map-marker-alt\" />\r\n            <b>Hà Nội</b>\r\n            <small>{dateTime}</small>\r\n            <button\r\n              class:rotation={loading}\r\n              class=\"btn-floating btn-large waves-effect waves-light btn-flat\"\r\n              on:click={RefreshCurrentWeather}>\r\n              <i class=\"fas fa-sync-alt\" style=\"color: MEDIUMAQUAMARINE\" />\r\n            </button>\r\n          </span>\r\n          <div class=\"temp-weather\">\r\n            <img\r\n              src={getWeatherIcon(new Object(new Object(new Object(objWeather[0]).weather)[0]).icon)}\r\n              alt=\"\" />\r\n            <span>\r\n              {(new Object(new Object(objWeather[0]).temp).min + new Object(new Object(objWeather[0]).temp).min) / 2}°C\r\n              ({new Object(new Object(new Object(objWeather[0]).weather)[0]).description})\r\n            </span>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col s12\" style=\"padding-bottom: 20px\">\r\n              <h5>Trạng thái</h5>\r\n            </div>\r\n            <div class=\"col s6 m3\">\r\n              <i class=\"fas fa-temperature-low\" style=\"color: lightblue\" />\r\n              {new Object(new Object(objWeather[0]).temp).min}°C\r\n            </div>\r\n            <div class=\"col s6 m3\">\r\n              <i class=\"fas fa-temperature-high\" style=\"color: orange\" />\r\n              {new Object(new Object(objWeather[0]).temp).max}°C\r\n            </div>\r\n            <div class=\"col s6 m3\">\r\n              <i class=\"wi wi-humidity\" style=\"color: DEEPSKYBLUE \" />\r\n              {new Object(objWeather[0]).humidity}%\r\n            </div>\r\n            <div class=\"col s6 m3\">\r\n              <i class=\"wi wi-raindrops\" style=\"color: AQUA \" />\r\n              {new Object(objWeather[0]).rain} mm/h\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col s6 m3\">\r\n              <i class={getWindyIcon(new Object(objWeather[0]).wind_deg)} />\r\n              {new Object(objWeather[0]).wind_speed} m/s\r\n            </div>\r\n            <div class=\"col s6 m3\">\r\n              <i class=\"wi wi-cloudy\" style=\"color: LIGHTSKYBLUE\" />\r\n              {new Object(objWeather[0]).clouds}%\r\n            </div>\r\n            <div class=\"col s6 m3\">\r\n              <i class=\"wi wi-day-sunny\" style=\"color: yellow\" />\r\n              {getLocalTimeFromTimestamp(new Object(objWeather[0]).sunrise, new Object(objWeather[0]).timezone)}\r\n            </div>\r\n            <div class=\"col s6 m3\">\r\n              <i class=\"wi wi-night-clear\" style=\"color: DARKSLATEBLUE\" />\r\n              {getLocalTimeFromTimestamp(new Object(objWeather[0]).sunset, new Object(objWeather[0]).timezone)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card-action\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AA8FE,4BAAa,CAAC,IAAI,eAAC,CAAC,AAClB,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,4BAAa,CAAC,GAAG,eAAC,CAAC,AACjB,cAAc,CAAE,MAAM,AACxB,CAAC,AACD,qBAAqB,8BAAC,CAAC,AACrB,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,oCAAqB,CAAC,KAAK,eAAC,CAAC,AAC3B,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,KAAK,CACvB,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,GAAG,AACd,CAAC,AACD,UAAU,8BAAC,CAAC,AACV,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,UAAU,8BAAC,CAAC,AACV,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,SAAS,8BAAC,CAAC,AACT,SAAS,CAAE,iCAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,AAClD,CAAC,AAED,WAAW,iCAAmB,CAAC,AAC7B,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,OAAO,IAAI,CAAC,AACzB,CAAC,AACD,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACH,CAAC"
}